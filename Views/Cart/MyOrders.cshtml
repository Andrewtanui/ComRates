@model IEnumerable<TanuiApp.Models.Order>
@{
    ViewData["Title"] = "My Orders";
}
<div class="shop-container container py-4">
    <h2 class="mb-4 fw-bold">My Orders</h2>

    @if (!Model.Any())
    {
        <div class="text-center p-4">
            <img src="/images/empty-cart.svg" alt="No orders" style="max-width:300px;width:70%;height:auto" />
            <h5 class="mt-3 text-muted">You don’t have any orders yet.</h5>
        </div>
    }
    else
    {
        <div class="order-timeline">
            @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
            {
                <div class="order-card mb-4 p-4 shadow-sm rounded-3 bg-white">
                    <div class="d-flex justify-content-between align-items-center mb-3 border-bottom pb-2">
                        <div>
                            <h6 class="fw-bold mb-1">Order #@order.Id</h6>
                            <small class="text-muted">Placed on @order.OrderDate.ToString("MMM dd, yyyy • h:mm tt")</small>
                            @if (!string.IsNullOrEmpty(order.TrackingNumber))
                            {
                                <br><small class="text-primary"><i class="bi bi-box-seam"></i> Tracking: <strong>@order.TrackingNumber</strong></small>
                            }
                        </div>
                        <div class="text-end">
                            <span class="fw-bold h5 mb-0">@("Ksh. "+order.TotalAmount.ToString("N0"))</span>
                            <div class="mt-1">
                                <span class="badge rounded-pill px-3 py-2 
                                    @(order.Status?.ToLower() == "completed" ? "bg-success" :
                                      order.Status?.ToLower() == "cancelled" ? "bg-danger" : "bg-warning text-dark")">
                                    <i class="bi @(order.Status?.ToLower() == "completed" ? "bi-check-circle" :
                                                 order.Status?.ToLower() == "cancelled" ? "bi-x-circle" : "bi-hourglass-split") me-1"></i>
                                    @order.Status
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Delivery Status Tracker -->
                    <div class="delivery-tracker mb-3 p-3 bg-light rounded">
                        <h6 class="mb-3"><i class="bi bi-truck me-2"></i>Delivery Status</h6>
                        <div class="progress-steps">
                            <div class="step @(order.DeliveryStatus == "Preparing" || order.DeliveryStatus == "Packed" || order.DeliveryStatus == "InTransit" || order.DeliveryStatus == "Delivered" ? "completed" : "")">
                                <div class="step-icon">
                                    <i class="bi bi-box"></i>
                                </div>
                                <div class="step-label">Preparing</div>
                            </div>
                            <div class="step @(order.DeliveryStatus == "Packed" || order.DeliveryStatus == "InTransit" || order.DeliveryStatus == "Delivered" ? "completed" : "")">
                                <div class="step-icon">
                                    <i class="bi bi-box-seam"></i>
                                </div>
                                <div class="step-label">Packed</div>
                            </div>
                            <div class="step @(order.DeliveryStatus == "InTransit" || order.DeliveryStatus == "Delivered" ? "completed" : "")">
                                <div class="step-icon">
                                    <i class="bi bi-truck"></i>
                                </div>
                                <div class="step-label">In Transit</div>
                            </div>
                            <div class="step @(order.DeliveryStatus == "Delivered" ? "completed" : "")">
                                <div class="step-icon">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="step-label">Delivered</div>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(order.DeliveryAddress))
                        {
                            <div class="mt-3">
                                <small class="text-muted">
                                    <i class="bi bi-geo-alt"></i> Delivering to: <strong>@order.DeliveryAddress, @order.DeliveryTown, @order.DeliveryCounty</strong>
                                </small>
                            </div>
                        }
                    </div>

                    <ul class="list-group list-group-flush">
                        @foreach (var item in order.Items)
                        {
                            <li class="list-group-item d-flex align-items-center">
                                <img src="@(item.Product?.ImageUrl ?? "/images/placeholder-product.svg")"
                                     onerror="this.onerror=null;this.src='/images/placeholder-product.svg'"
                                     class="rounded me-3"
                                     style="width:64px;height:64px;object-fit:cover;" />

                                <div class="flex-grow-1">
                                    <div class="fw-semibold">@((item.Product != null ? item.Product.Name : "[Deleted Product]"))</div>
                                    <small class="text-muted">@("KSh. "+(item.Price).ToString("N0")) x @((item.Quantity))</small>
                                </div>

                                <div class="fw-bold">@("KSh. "+(item.Price * item.Quantity).ToString("N0"))</div>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    }
</div>

<style>
    .order-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    .order-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }
    .order-timeline {
        position: relative;
    }
    .order-timeline::before {
        content: '';
        position: absolute;
        top: 0;
        left: 18px;
        bottom: 0;
        width: 2px;
        background: #e0e0e0;
    }
    .order-card {
        position: relative;
        margin-left: 40px;
    }
    .order-card::before {
        content: '';
        position: absolute;
        top: 20px;
        left: -28px;
        width: 16px;
        height: 16px;
        background: #fff;
        border: 3px solid #0d6efd;
        border-radius: 50%;
    }
    
    /* Delivery Tracker Styles */
    .progress-steps {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        margin: 20px 0;
    }
    .progress-steps::before {
        content: '';
        position: absolute;
        top: 20px;
        left: 10%;
        right: 10%;
        height: 3px;
        background: #e0e0e0;
        z-index: 0;
    }
    .step {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        z-index: 1;
        flex: 1;
    }
    .step-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: #e0e0e0;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 8px;
        transition: all 0.3s ease;
    }
    .step.completed .step-icon {
        background: #198754;
        color: white;
    }
    .step-icon i {
        font-size: 18px;
    }
    .step-label {
        font-size: 12px;
        font-weight: 600;
        text-align: center;
        color: #6c757d;
    }
    .step.completed .step-label {
        color: #198754;
    }
</style>
