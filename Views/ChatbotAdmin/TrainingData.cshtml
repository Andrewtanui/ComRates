@model List<TanuiApp.Models.ChatbotTrainingData>

@{
    ViewData["Title"] = "Chatbot Training Data";
}

<div class="container-fluid my-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2><i class="bi bi-database me-2"></i>Chatbot Training Data</h2>
                <div>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTrainingModal">
                        <i class="bi bi-plus-circle me-1"></i>Add Training Data
                    </button>
                    <a asp-action="Dashboard" class="btn btn-secondary ms-2">
                        <i class="bi bi-arrow-left me-1"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            <i class="bi bi-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <i class="bi bi-exclamation-circle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Training Samples (@Model.Count)</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="trainingTable">
                        <thead>
                            <tr>
                                <th>Text</th>
                                <th>Intent</th>
                                <th>Status</th>
                                <th>Added</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var data in Model)
                            {
                                <tr>
                                    <td>@data.Text</td>
                                    <td><span class="badge bg-secondary">@data.Intent</span></td>
                                    <td>
                                        @if (data.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <small>@data.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy")</small>
                                    </td>
                                    <td>
                                        <form asp-action="DeleteTrainingData" method="post" class="d-inline" 
                                              onsubmit="return confirm('Delete this training data?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@data.Id" />
                                            <button type="submit" class="btn btn-sm btn-danger">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    No custom training data added yet. The chatbot is using default training samples.
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Training Data Modal -->
<div class="modal fade" id="addTrainingModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="AddTrainingData" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title"><i class="bi bi-plus-circle me-2"></i>Add Training Data</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="text" class="form-label">Training Text <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="text" name="text" 
                               placeholder="e.g., how do I track my package" required />
                        <small class="text-muted">Enter a sample user question or phrase</small>
                    </div>
                    <div class="mb-3">
                        <label for="intent" class="form-label">Intent <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="intent" name="intent" 
                               placeholder="e.g., track_order" required list="intentSuggestions" />
                        <datalist id="intentSuggestions">
                            <option value="greeting"></option>
                            <option value="browse_products"></option>
                            <option value="search_products"></option>
                            <option value="view_cart"></option>
                            <option value="checkout"></option>
                            <option value="my_orders"></option>
                            <option value="track_order"></option>
                            <option value="shipping"></option>
                            <option value="returns"></option>
                            <option value="refund"></option>
                            <option value="payments"></option>
                            <option value="my_account"></option>
                            <option value="help"></option>
                            <option value="customer_support"></option>
                        </datalist>
                        <small class="text-muted">The category/intent this text belongs to</small>
                    </div>
                    <div class="alert alert-info">
                        <i class="bi bi-lightbulb me-2"></i>
                        <strong>Tip:</strong> Add multiple variations of the same question with the same intent to improve accuracy.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-1"></i>Add & Retrain
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add search functionality to the table
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.createElement('input');
            searchInput.type = 'text';
            searchInput.className = 'form-control mb-3';
            searchInput.placeholder = 'Search training data...';
            
            const table = document.getElementById('trainingTable');
            if(table) {
                table.parentElement.insertBefore(searchInput, table);
                
                searchInput.addEventListener('keyup', function() {
                    const filter = this.value.toLowerCase();
                    const rows = table.querySelectorAll('tbody tr');
                    
                    rows.forEach(row => {
                        const text = row.textContent.toLowerCase();
                        row.style.display = text.includes(filter) ? '' : 'none';
                    });
                });
            }
        });
    </script>
}
