@model IEnumerable<TanuiApp.Models.Product>
@using System.Security.Claims
@using System.Text.RegularExpressions

@{
    ViewData["Title"] = "Products";

    string HighlightText(string text, string search)
    {
        if (string.IsNullOrWhiteSpace(search)) return text;

        var regex = new Regex("(" + Regex.Escape(search) + ")", RegexOptions.IgnoreCase);
        return regex.Replace(text, "<mark>$1</mark>");
    }

    var searchQuery = ViewBag.SearchQuery as string;
}

<div class="container my-5">

    <!-- 🔍 Search Bar -->
    <form class="d-flex mb-5" asp-controller="Products" asp-action="Search" method="get">
        <div class="input-group">
            <input class="form-control" type="search" name="query" placeholder="Search products..." aria-label="Search" value="@searchQuery">
            <button class="btn btn-light" type="submit"><i class="bi bi-search"></i></button>
        </div>
    </form>

    <!-- 🔥 On Sale Section -->
    <div class="text-center mb-5">
        <h2 class="fw-bold">🔥 On Sale Now</h2>
        <p class="text-muted">Grab these deals before the timer runs out!</p>
    </div>

    <div class="row g-4 mb-5">
        @foreach (var product in Model.Where(p => p.OnSale))
        {
            <div class="col-md-3">
                <div class="card h-100 shadow-sm">
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">
                            @Html.Raw(HighlightText(product.Name, searchQuery))
                        </h5>
                        <p class="text-danger fw-bold">
                            $@product.Price
                            <span class="text-muted text-decoration-line-through">
                                $@Math.Round(product.Price * 1.5M, 2)
                            </span>
                        </p>
                        <div class="mb-2">
                            @for (int i = 0; i < (int)Math.Round(product.Rating); i++)
                            {
                                <span>⭐</span>
                            }
                            @for (int i = (int)Math.Round(product.Rating); i < 5; i++)
                            {
                                <span>☆</span>
                            }
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                            if (product.UserId != userId)
                            {
                                <div class="d-grid gap-2">
                                    <form asp-action="AddToCart" method="post">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <button type="submit" class="btn btn-success w-100">
                                            <i class="fas fa-shopping-cart"></i> Add to Cart
                                        </button>
                                    </form>
                                    <form asp-controller="Wishlist" asp-action="AddToWishlist" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <button type="submit" class="btn btn-outline-danger w-100">
                                            <i class="fas fa-heart"></i> Add to Wishlist
                                        </button>
                                    </form>
                                </div>
                            }
                            else
                            {
                                <button class="btn btn-secondary w-100" disabled>Your Product</button>
                            }
                        }
                        else
                        {
                            <div class="d-grid gap-2">
                                <a href="/Identity/Account/Login" class="btn btn-success w-100">
                                    <i class="fas fa-shopping-cart"></i> Login to Add
                                </a>
                                <a href="/Identity/Account/Login" class="btn btn-outline-danger w-100">
                                    <i class="fas fa-heart"></i> Login for Wishlist
                                </a>
                            </div>
                        }

                        @if (product.SaleEndDate.HasValue)
                        {
                            <div class="mt-2 text-success sale-timer" data-end="@product.SaleEndDate.Value.ToString("yyyy-MM-ddTHH:mm:ss")"></div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- 🌟 Featured Products Section -->
    <div class="text-center mb-5">
        <h2 class="fw-bold">🌟 Featured Products</h2>
        <p class="text-muted">Our top picks for you</p>
    </div>

    <div class="row g-4 mb-5">
        @foreach (var product in Model.Where(p => !p.OnSale).Take(4))
        {
            <div class="col-md-3">
                <div class="card h-100 shadow-sm">
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">
                            @Html.Raw(HighlightText(product.Name, searchQuery))
                        </h5>
                        <p class="fw-bold">$@product.Price</p>
                        <div class="mb-2">
                            @for (int i = 0; i < (int)Math.Round(product.Rating); i++)
                            {
                                <span>⭐</span>
                            }
                            @for (int i = (int)Math.Round(product.Rating); i < 5; i++)
                            {
                                <span>☆</span>
                            }
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                            if (product.UserId != userId)
                            {
                                <div class="d-grid gap-2">
                                    <form asp-action="AddToCart" method="post">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <button type="submit" class="btn btn-outline-success w-100">
                                            <i class="fas fa-shopping-cart"></i> Add to Cart
                                        </button>
                                    </form>
                                    <form asp-controller="Wishlist" asp-action="AddToWishlist" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <button type="submit" class="btn btn-outline-danger w-100">
                                            <i class="fas fa-heart"></i> Add to Wishlist
                                        </button>
                                    </form>
                                </div>
                            }
                            else
                            {
                                <button class="btn btn-secondary w-100" disabled>Your Product</button>
                            }
                        }
                        else
                        {
                            <div class="d-grid gap-2">
                                <a href="/Identity/Account/Login" class="btn btn-outline-success w-100">
                                    <i class="fas fa-shopping-cart"></i> Login to Add
                                </a>
                                <a href="/Identity/Account/Login" class="btn btn-outline-danger w-100">
                                    <i class="fas fa-heart"></i> Login for Wishlist
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- 📂 Categories Section -->
    <div class="text-center mb-4">
        <h2 class="fw-bold">📂 Shop by Categories</h2>
        <p class="text-muted">Choose a category to explore more</p>
    </div>

    <div class="row g-4">
        @foreach (var category in Model.Select(p => p.Category).Distinct())
        {
            <div class="col-md-3">
                <a asp-controller="Products" asp-action="Category" asp-route-name="@category" class="text-decoration-none">
                    <div class="card shadow-sm h-100 text-center p-4 category-card">
                        <h5>@Html.Raw(HighlightText(category, searchQuery))</h5>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/sale-timer.js"></script>
}
